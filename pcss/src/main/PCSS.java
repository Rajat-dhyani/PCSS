/*
 * Copyright (c) 2017, Rajat Dhyani (http://www.rajatdhyani.xyz)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

package main;

import DocumentManager.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author rajat_000
 */
public class PCSS extends javax.swing.JFrame {
    String pcssFilePath = "";
    String cssFilePath = "";
    File pcssFile = null;
    File cssFile = null;
    Boolean hasPcssFile = false, hasCssFile = false, isUpdated = false;
    /**
     * Creates new form PCSS
     */
    public PCSS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        jBUpdate = new javax.swing.JButton();
        jLBrowsePcssFile = new javax.swing.JLabel();
        jBConnect = new javax.swing.JButton();
        jBDisConnect = new javax.swing.JButton();
        jBBrowsePcssFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTCssFile = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jBHelp = new javax.swing.JButton();
        jTBrowsePcssFile = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTPcssFile = new javax.swing.JTextArea();
        jTBrowseFile5 = new javax.swing.JLabel();
        jTBrowseFile6 = new javax.swing.JLabel();
        jTBrowseCssFile = new javax.swing.JTextField();
        jLBrowseCssFile = new javax.swing.JLabel();
        jBBrowseCssFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        Title.setForeground(new java.awt.Color(51, 51, 255));
        Title.setText("PCSS");

        jBUpdate.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jBUpdate.setForeground(new java.awt.Color(51, 204, 0));
        jBUpdate.setText("UPdate");
        jBUpdate.setEnabled(false);
        jBUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUpdateActionPerformed(evt);
            }
        });

        jLBrowsePcssFile.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jLBrowsePcssFile.setForeground(new java.awt.Color(0, 153, 153));
        jLBrowsePcssFile.setText("PCSS FILE");

        jBConnect.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jBConnect.setForeground(new java.awt.Color(51, 204, 0));
        jBConnect.setText("Connect");
        jBConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConnectActionPerformed(evt);
            }
        });

        jBDisConnect.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jBDisConnect.setForeground(new java.awt.Color(255, 0, 51));
        jBDisConnect.setText("DISConnect");
        jBDisConnect.setEnabled(false);
        jBDisConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDisConnectActionPerformed(evt);
            }
        });

        jBBrowsePcssFile.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jBBrowsePcssFile.setForeground(new java.awt.Color(255, 153, 102));
        jBBrowsePcssFile.setText("Browse");
        jBBrowsePcssFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBrowsePcssFileActionPerformed(evt);
            }
        });

        jTCssFile.setColumns(20);
        jTCssFile.setRows(5);
        jTCssFile.setEditable(false);
        jScrollPane1.setViewportView(jTCssFile);

        jBHelp.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jBHelp.setForeground(new java.awt.Color(153, 51, 0));
        jBHelp.setText("HELP");
        jBHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHelpActionPerformed(evt);
            }
        });

        jTBrowsePcssFile.setText("Choose PCSS File");
        jTBrowsePcssFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBrowsePcssFileActionPerformed(evt);
            }
        });
        jTBrowsePcssFile.setEditable(false);

        jTPcssFile.setColumns(20);
        jTPcssFile.setRows(5);
        jTCssFile.setEditable(false);
        jScrollPane2.setViewportView(jTPcssFile);

        jTBrowseFile5.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jTBrowseFile5.setForeground(new java.awt.Color(0, 153, 153));
        jTBrowseFile5.setText("PCSS");

        jTBrowseFile6.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jTBrowseFile6.setForeground(new java.awt.Color(0, 153, 153));
        jTBrowseFile6.setText("CSS");

        jTBrowseCssFile.setText("Choose CSS File to map with pcss");
        jTBrowseCssFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBrowseCssFileActionPerformed(evt);
            }
        });
        jTBrowseCssFile.setEditable(false);

        jLBrowseCssFile.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jLBrowseCssFile.setForeground(new java.awt.Color(0, 153, 153));
        jLBrowseCssFile.setText("CSS FILE");

        jBBrowseCssFile.setFont(new java.awt.Font("Algerian", 0, 12)); // NOI18N
        jBBrowseCssFile.setForeground(new java.awt.Color(255, 153, 102));
        jBBrowseCssFile.setText("Browse");
        jBBrowseCssFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBrowseCssFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jTBrowseFile5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTBrowseFile6)
                        .addGap(159, 159, 159))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jBConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBDisConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(jBHelp))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(332, 332, 332)
                                .addComponent(Title))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLBrowseCssFile)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTBrowseCssFile, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLBrowsePcssFile)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTBrowsePcssFile, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jBBrowsePcssFile, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                    .addComponent(jBBrowseCssFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jBUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(283, 283, 283))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLBrowsePcssFile)
                    .addComponent(jTBrowsePcssFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBrowsePcssFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTBrowseCssFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLBrowseCssFile)
                    .addComponent(jBBrowseCssFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConnect)
                    .addComponent(jBDisConnect)
                    .addComponent(jBHelp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTBrowseFile5)
                    .addComponent(jTBrowseFile6))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBUpdate)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateTextBox() throws FileNotFoundException{
         System.out.println(pcssFilePath);
         pcssFile = new File(pcssFilePath);
         Scanner sc = new Scanner(pcssFile);
         
         jTPcssFile.setText("");
         jTCssFile.setText("");
         while (sc.hasNext()){
            jTPcssFile.append(sc.nextLine());
            jTPcssFile.append("\n");
         }
                
         System.out.println(cssFilePath);
         cssFile = new File(cssFilePath);
         sc = new Scanner(cssFile);
            
         while (sc.hasNext()){
            jTCssFile.append(sc.nextLine());
            jTCssFile.append("\n");
         }
    }
    private void jBUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUpdateActionPerformed
       // This button is used to update the css file as per the rules of PCSS and CSS.
       // Step 1: Check for syntax error
       // Step 2: Check for keywords and perform action according to keywords.
       // Step 3: Update the CSS file with all the preprocessed data.
       DocumentManager dom = new DocumentManager(); 
       isUpdated = dom.doUpdate(pcssFilePath,jTPcssFile, cssFilePath, jTCssFile);
       
       if (isUpdated){
           JOptionPane.showMessageDialog(null, "Css File Successfully Updated","Success",JOptionPane.PLAIN_MESSAGE);
           try {  
               updateTextBox();
           } catch (FileNotFoundException ex) {
               Logger.getLogger(PCSS.class.getName()).log(Level.SEVERE, null, ex);
           }
       } else{
           JOptionPane.showMessageDialog(null, "Css File Could Not be Updated","Error",JOptionPane.ERROR_MESSAGE);
       }
        
    }//GEN-LAST:event_jBUpdateActionPerformed

    private void jBConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConnectActionPerformed
        // This button is used to connect to css file
        // It loads the file to the text area to add cutomized css
        try {
            if ( hasCssFile && hasPcssFile) {
                updateTextBox();
            
                jBConnect.setText("Connected");
                jBConnect.setEnabled(false);
                jBDisConnect.setEnabled(true);
                jBUpdate.setEnabled(true);
                jTPcssFile.setEditable(true);
            } else {
                
            }
        }
        catch(Exception ex){
            
        }
        
        
    }//GEN-LAST:event_jBConnectActionPerformed

    private void jBDisConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDisConnectActionPerformed
        // This button is used to disconnect the currently loaded file 
        // User can then load other file.
        
        // Todo :: First perform update on the files before disconnecting. 
         
        // Destroy File object and nullify its path
        pcssFile = null;
        pcssFilePath = "";
        cssFile = null;
        cssFilePath = "";
        
        // Update buttons.
        jBDisConnect.setText("Disconnected");
        jBDisConnect.setEnabled(false);
        jBConnect.setEnabled(true);
        jBUpdate.setEnabled(false);
        jBBrowsePcssFile.setEnabled(true);
        jBBrowseCssFile.setEnabled(true);
        
        // Update text in TextArea and file path 
        
        jTBrowsePcssFile.setText("Choose PCSS File");
        jTBrowseCssFile.setText("Choose CSS File to map with PCSS File");
        jTPcssFile.setText(null);
        jTPcssFile.setEditable(false);
        jTCssFile.setText(null);
        
    }//GEN-LAST:event_jBDisConnectActionPerformed

    private void jBBrowsePcssFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBrowsePcssFileActionPerformed
        // This is used to browse the css file that needs to have PCSS styling.
        
        JFileChooser fileChooser = getFile(jBBrowsePcssFile, "PCSS File", "pcss");
            
        if (fileChooser !=  null){
            pcssFilePath = fileChooser.getSelectedFile().getAbsolutePath();
            jTBrowsePcssFile.setText(""+fileChooser.getSelectedFile());
            pcssFilePath = pcssFilePath.replace("\\", "\\\\");
            jBBrowsePcssFile.setEnabled(false);
            hasPcssFile = true;  
        } else{
              JOptionPane.showMessageDialog(null,"Please Select a PCSS file","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jBBrowsePcssFileActionPerformed

    private void jBHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBHelpActionPerformed

    private void jTBrowsePcssFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBrowsePcssFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBrowsePcssFileActionPerformed

    private void jTBrowseCssFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBrowseCssFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTBrowseCssFileActionPerformed

    private void jBBrowseCssFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBrowseCssFileActionPerformed
        JFileChooser fileChooser = getFile(jBBrowseCssFile, "CSS File", "css");
            
        if (fileChooser !=  null){
            cssFilePath = fileChooser.getSelectedFile().getAbsolutePath();
            jTBrowseCssFile.setText(""+fileChooser.getSelectedFile());
            cssFilePath = cssFilePath.replace("\\", "\\\\");
            jBBrowseCssFile.setEnabled(false);
            hasCssFile = true;  
        } else{
              JOptionPane.showMessageDialog(null,"Please Select a PCSS file","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jBBrowseCssFileActionPerformed

    private JFileChooser getFile(JButton jBBrowseFile ,String requiredType, String fileExtension){
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new java.io.File("."));
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        FileFilter filter = new FileNameExtensionFilter(requiredType, fileExtension);
        fileChooser.addChoosableFileFilter(filter);
 
        fileChooser.setDialogTitle("Browse");
        if ( fileChooser.showOpenDialog(jBBrowseFile) == JFileChooser.APPROVE_OPTION)
        {
            if (!fileChooser.getSelectedFile().getName().endsWith(fileExtension)){
                JOptionPane.showMessageDialog(null,"File Choosen is not "+ requiredType,"Error",JOptionPane.ERROR_MESSAGE);                
                return null;
            } else {
               return fileChooser;
            }
        }
        return null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PCSS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PCSS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PCSS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PCSS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PCSS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    public javax.swing.JButton jBBrowseCssFile;
    public javax.swing.JButton jBBrowsePcssFile;
    public javax.swing.JButton jBConnect;
    public javax.swing.JButton jBDisConnect;
    public javax.swing.JButton jBHelp;
    public javax.swing.JButton jBUpdate;
    private javax.swing.JLabel jLBrowseCssFile;
    private javax.swing.JLabel jLBrowsePcssFile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTBrowseCssFile;
    private javax.swing.JLabel jTBrowseFile5;
    private javax.swing.JLabel jTBrowseFile6;
    private javax.swing.JTextField jTBrowsePcssFile;
    private javax.swing.JTextArea jTCssFile;
    private javax.swing.JTextArea jTPcssFile;
    // End of variables declaration//GEN-END:variables
}
